{"version":3,"file":"static/js/943.5dca62a1.chunk.js","mappings":"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","sources":["pages/WooFormPage6.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport \"./WooFormPage.css\";\r\n\r\nexport default function WooFormPage6() {\r\n  const navigate = useNavigate();\r\n  const stored = JSON.parse(localStorage.getItem(\"wooFormData\") || \"{}\");\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    trigger,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onChange\", defaultValues: stored });\r\n\r\n  const patientSig = useRef(null);\r\n\r\n  useEffect(() => {\r\n    trigger();\r\n    register(\"patientSignature6\", { required: true });\r\n  }, [trigger, register]);\r\n\r\n  const reqClass = (err) => (err ? \"wc-required error\" : \"wc-required valid\");\r\n\r\n  const handleEnd = () => {\r\n    if (patientSig.current) {\r\n      const dataURL = patientSig.current.getTrimmedCanvas().toDataURL();\r\n      setValue(\"patientSignature6\", dataURL, { shouldValidate: true });\r\n    }\r\n  };\r\n\r\n  const clearSig = () => {\r\n    if (patientSig.current) patientSig.current.clear();\r\n    setValue(\"patientSignature6\", \"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const full = { ...stored, ...data };\r\n    localStorage.setItem(\"wooFormData\", JSON.stringify(full));\r\n    navigate(\"/confirmation\");\r\n  };\r\n\r\n  const today = new Date().toLocaleDateString(\"en-US\");\r\n\r\n  return (\r\n    <div className=\"wc-container\">\r\n      <div className=\"wc-content\">\r\n        <h1 className=\"wc-title\">Telemedicine Consultation Forms (Woocommerce)</h1>\r\n        <div className=\"wc-paper\">\r\n          <div className=\"wc-progress\">\r\n            <div className=\"wc-progress-info\">\r\n              <p>Step 6 of 6</p>\r\n            </div>\r\n            <div className=\"wc-progress-bg\">\r\n              <div className=\"wc-progress-fill\" style={{ width: '100%' }} />\r\n            </div>\r\n          </div>\r\n\r\n          <form className=\"wc-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <p className=\"wc-section-title\">Control Substance Auto-refill Consent</p>\r\n            <div className=\"wc-consent-text\">\r\n              <p>\r\n                I understand that Pure Health &amp; Wellness has enrolled my controlled\r\n                substance medication in Tailor Made Compounding’s auto-refill program.\r\n              </p>\r\n              <p><strong>Liability and Responsibility:</strong></p>\r\n              <ul>\r\n                <li>\r\n                  I understand that TMC will not call and/or email to notify me or Pure\r\n                  Health & Wellness that my medication is being refilled.\r\n                </li>\r\n                <li>\r\n                  I understand that this form is a legal replacement in regards to\r\n                  receiving a call to notify me that my prescription is due to be\r\n                  filled and will be shipped to me without confirmation.\r\n                </li>\r\n                <li>\r\n                  I understand that it is my responsibility to immediately report any\r\n                  change in regards to my shipping address.\r\n                </li>\r\n                <li>\r\n                  I understand that I will be held responsible for notifying TMC in\r\n                  the event my controlled substance package(s) are lost or stolen. I\r\n                  will inquire about the next steps for contacting UPS and filing a\r\n                  police report, and I fully understand if I do not take these next\r\n                  steps that I may not be eligible for any medication replacements.\r\n                </li>\r\n                <li>\r\n                  I understand that I will be held responsible for any added expenses\r\n                  of lost or stolen packages.\r\n                </li>\r\n                <li>\r\n                  I understand that I will be responsible for notifying TMC if I have\r\n                  a pause and/or discontinuation of medication.\r\n                </li>\r\n                <li>\r\n                  I understand that it is my responsibility to notify TMC if my dosing\r\n                  or quantity prescribed has changed and any previous prescription’s\r\n                  refills will need to be canceled.\r\n                </li>\r\n                <li>\r\n                  I understand that if I do not notify TMC before a prescription has\r\n                  left their facility, I will still be held responsible for the\r\n                  payment of this prescription.\r\n                </li>\r\n              </ul>\r\n              <p>\r\n                In accordance with state law KRS 218A.180 a controlled substance\r\n                included in Schedules III, IV, and V “shall not be filled or refilled\r\n                more than six (6) months after the date issued or be refilled more\r\n                than five (5) times, unless renewed by the practitioner and a new\r\n                prescription, written, electronic, or oral shall be required”.\r\n                Therefore, any prescriptions exceeding 6 months from date written,\r\n                will require a new order to be sent in or verbal renewal by prescriber\r\n                regardless of refills remaining.\r\n              </p>\r\n            </div>\r\n\r\n            {/* Patient Name */}\r\n            <div className=\"wc-group\">\r\n              <label>Patient Name</label>\r\n              <p>\r\n                {stored.firstName || ''} {stored.lastName || ''}\r\n              </p>\r\n            </div>\r\n\r\n            {/* Patient Signature */}\r\n            <div className=\"wc-group\">\r\n              <label>\r\n                Patient Signature{' '}\r\n                <span className={reqClass(errors.patientSignature6)}>(Required)</span>\r\n              </label>\r\n              <SignatureCanvas\r\n                ref={patientSig}\r\n                penColor=\"black\"\r\n                canvasProps={{ className: 'wc-signature-canvas' }}\r\n                onEnd={handleEnd}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"wc-clear-signature\"\r\n                onClick={clearSig}\r\n              >\r\n                Clear Signature\r\n              </button>\r\n              {errors.patientSignature6 && (\r\n                <p className=\"wc-error-message\">Signature is required.</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Date of Birth */}\r\n            <div className=\"wc-group wc-group--two\">\r\n              <label>\r\n                Date of Birth{' '}\r\n                <span className={reqClass(\r\n                  errors.dob6Month || errors.dob6Day || errors.dob6Year\r\n                )}>(Required)</span>\r\n              </label>\r\n              <div className=\"wc-dob\">\r\n                <select\r\n                  className=\"wc-select\"\r\n                  {...register(\"dob6Month\", { required: true })}\r\n                >\r\n                  <option value=\"\">MM</option>\r\n                  {[...Array(12)].map((_, i) => (\r\n                    <option key={i} value={String(i + 1).padStart(2, '0')}>\r\n                      {String(i + 1).padStart(2, '0')}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  className=\"wc-select\"\r\n                  {...register(\"dob6Day\", { required: true })}\r\n                >\r\n                  <option value=\"\">DD</option>\r\n                  {[...Array(31)].map((_, i) => (\r\n                    <option key={i} value={String(i + 1).padStart(2, '0')}>\r\n                      {String(i + 1).padStart(2, '0')}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  className=\"wc-select\"\r\n                  {...register(\"dob6Year\", { required: true })}\r\n                >\r\n                  <option value=\"\">YYYY</option>\r\n                  {Array.from({ length: 100 }, (_, k) =>\r\n                    new Date().getFullYear() - k\r\n                  ).map((yr) => (\r\n                    <option key={yr} value={yr}>\r\n                      {yr}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {(errors.dob6Month || errors.dob6Day || errors.dob6Year) && (\r\n                <p className=\"wc-error-message\">Month, Day, and Year required.</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Date */}\r\n            <div className=\"wc-group\">\r\n              <label>Date: {today}</label>\r\n            </div>\r\n\r\n            {/* Navigation Buttons */}\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <button\r\n                type=\"button\"\r\n                className=\"wc-button wc-button--outline\"\r\n                onClick={() => navigate(-1)}\r\n              >\r\n                Previous\r\n              </button>\r\n              <button type=\"submit\" className=\"wc-button\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["WooFormPage6","navigate","useNavigate","stored","JSON","parse","localStorage","getItem","register","handleSubmit","trigger","setValue","watch","formState","errors","useForm","mode","defaultValues","patientSig","useRef","useEffect","required","reqClass","err","today","Date","toLocaleDateString","_jsx","className","children","_jsxs","style","width","onSubmit","data","full","_objectSpread","setItem","stringify","firstName","lastName","patientSignature6","SignatureCanvas","ref","penColor","canvasProps","onEnd","handleEnd","current","dataURL","getTrimmedCanvas","toDataURL","shouldValidate","type","onClick","clearSig","clear","dob6Month","dob6Day","dob6Year","value","Array","map","_","i","String","padStart","from","length","k","getFullYear","yr","display","justifyContent"],"sourceRoot":""}