{"version":3,"file":"static/js/201.867f9474.chunk.js","mappings":"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","sources":["sections/SingleLocation.js","pages/LocationsPage.js","sections/FooterComponent.js","sections/LocationsSection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { servicesData } from \"../data\";\r\nimport \"./SingleLocation.css\";\r\n\r\nconst SingleLocation = ({ office }) => {\r\n  // Determine if the screen width is 769px or wider.\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth >= 769);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setIsDesktop(window.innerWidth >= 769);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Convert servicesData into an array for mapping.\r\n  const servicesArray = Object.entries(servicesData).map(([key, service]) => ({\r\n    ...service,\r\n    id: key,\r\n  }));\r\n\r\n  // Use desktop image if available and on desktop; else fallback to hero image.\r\n  const locationImage =\r\n    isDesktop && office.desktopImage ? office.desktopImage : office.heroImage;\r\n\r\n  // Build the office snippet (LocalBusiness)\r\n  const officeSnippet = {\r\n    \"@type\": \"LocalBusiness\",\r\n    \"name\": office.name,\r\n    \"description\": office.description,\r\n    \"telephone\": office.phone,\r\n    \"url\": window.location.href,\r\n    \"image\": locationImage,\r\n    \"email\": office.email,\r\n  };\r\n\r\n  // Build service snippets from servicesArray\r\n  const servicesSnippets = servicesArray.map((service) => {\r\n    const serviceImage = isDesktop ? service.images.desktopHero : service.images.hero;\r\n    return {\r\n      \"@type\": \"Service\",\r\n      \"name\": service.title,\r\n      \"description\": service.shortDescription,\r\n      \"url\": `https://lightningseo.dev/services/${service.id}`,\r\n      \"image\": serviceImage,\r\n      \"provider\": {\r\n        \"@type\": \"Organization\",\r\n        \"name\": \"LightningSEO.dev\",\r\n        \"url\": \"https://lightningseo.dev\",\r\n        \"logo\": \"https://i.postimg.cc/QtwR2GW9/i-Stock-1502494966-1.webp\"\r\n      }\r\n    };\r\n  });\r\n\r\n  // Combine the office and services snippets in an @graph.\r\n  const richSnippet = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@graph\": [officeSnippet, ...servicesSnippets]\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(richSnippet)}\r\n        </script>\r\n      </Helmet>\r\n      <div className=\"sl-location-card\">\r\n        {/* Office Card Row */}\r\n        <div className=\"sl-location-cardrow\">\r\n          <div\r\n            className=\"sl-location-image\"\r\n            style={{ backgroundImage: `url(${locationImage})` }}\r\n          >\r\n            <h2 className=\"sl-location-name\">{office.name}</h2>\r\n          </div>\r\n          <div className=\"sl-location-info\">\r\n            {/* No address: display a generic label */}\r\n            <p className=\"sl-location-address\">Service Offered</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Redesigned Contact Info Section */}\r\n        <div className=\"sl-contact-info\">\r\n          <ul className=\"sl-contact-list\">\r\n            {office.phone && (\r\n              <li className=\"sl-contact-item\">\r\n                <strong>Phone:&nbsp;</strong>\r\n                <a href={`tel:${office.phone.replace(/[^0-9]/g, \"\")}`}>\r\n                  {office.phone}\r\n                </a>\r\n              </li>\r\n            )}\r\n            {office.fax && (\r\n              <li className=\"sl-contact-item\">\r\n                <strong>Fax:&nbsp;</strong> {office.fax}\r\n              </li>\r\n            )}\r\n            {office.email && (\r\n              <li className=\"sl-contact-item\">\r\n                <a href={`mailto:${office.email}`}>Email us</a>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Office Description */}\r\n        <div className=\"sl-office-description\">\r\n          <h3>About {office.name}</h3>\r\n          <p>{office.description}</p>\r\n        </div>\r\n\r\n        {/* Services List Section */}\r\n        <div\r\n          className=\"sl-services-section\"\r\n          style={{\r\n            backgroundImage: `url(${locationImage})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        >\r\n          <div className=\"sl-services-overlay\">\r\n            <h2 className=\"sl-services-title\">Our Services</h2>\r\n            <div className=\"sl-services-grid\">\r\n              {servicesArray\r\n                .sort((a, b) => a.title.localeCompare(b.title))\r\n                .map((service) => (\r\n                  <Link\r\n                    key={service.id}\r\n                    to={`/services/${service.id}`}\r\n                    className=\"sl-service-card\"\r\n                  >\r\n                    <div\r\n                      className=\"sl-service-image\"\r\n                      style={{ backgroundImage: `url(${service.images.hero})` }}\r\n                    ></div>\r\n                    <div className=\"sl-service-info\">\r\n                      <h3 className=\"sl-service-name\">{service.title}</h3>\r\n                      <p className=\"sl-service-short\">{service.shortDescription}</p>\r\n                    </div>\r\n                  </Link>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleLocation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { locationsData } from \"../data\";\r\nimport LocationsSection from \"../sections/LocationsSection\"; // Your office list component\r\nimport SingleLocation from \"../sections/SingleLocation\";\r\nimport FooterComponent from \"../sections/FooterComponent\";\r\nimport \"./LocationsPage.css\";\r\n\r\nfunction LocationsPage() {\r\n  const { locationId } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    message: \"\",\r\n    agreement: false,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // Auto-scroll to the contact form if URL has a hash (#contactForm)\r\n  useEffect(() => {\r\n    if (window.location.hash === \"#contactForm\") {\r\n      const element = document.getElementById(\"contactForm\");\r\n      if (element) {\r\n        element.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Form handling\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.firstName) newErrors.firstName = \"First Name is required.\";\r\n    if (!formData.lastName) newErrors.lastName = \"Last Name is required.\";\r\n    if (!formData.email) {\r\n      newErrors.email = \"Email address is required.\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = \"Invalid email format.\";\r\n    }\r\n    if (!formData.phone) {\r\n      newErrors.phone = \"Phone number is required.\";\r\n    } else if (!/^\\+?[1-9]\\d{1,14}$/.test(formData.phone)) {\r\n      newErrors.phone = \"Invalid phone number. Include country code.\";\r\n    }\r\n    if (!formData.message) newErrors.message = \"Message is required.\";\r\n    if (!formData.agreement) newErrors.agreement = \"You must agree to the terms.\";\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length > 0) {\r\n      setErrors(formErrors);\r\n      return;\r\n    }\r\n    setErrors({});\r\n    // Submit the form to the /contact endpoint\r\n    try {\r\n      const csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute(\"content\");\r\n      const response = await fetch(\"/contact\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"X-CSRF-Token\": csrfToken,\r\n        },\r\n        body: JSON.stringify({ contact: formData }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSubmitted(true);\r\n        console.log(\"✅ Message sent successfully!\");\r\n      } else {\r\n        console.error(\"❌ Error response from backend:\", await response.json());\r\n        setErrors({\r\n          form: \"There was an error sending your message. Try again later.\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error during form submission:\", error);\r\n      setErrors({\r\n        form: \"There was an error sending your message. Try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Determine whether we are showing a single location or the list.\r\n  const isSingleLocation = Boolean(locationId);\r\n\r\n  // Build the rich snippet for all locations if we're on the list page.\r\n  let locationsRichSnippet = null;\r\n  if (!isSingleLocation) {\r\n    const locationsArray = Object.entries(locationsData).map(([key, loc]) => {\r\n      const addressParts = loc.address ? loc.address.split(\",\").map(s => s.trim()) : [];\r\n      let streetAddress = loc.address;\r\n      let addressLocality = \"\";\r\n      let addressRegion = \"\";\r\n      let postalCode = \"\";\r\n      if (addressParts.length >= 3) {\r\n        streetAddress = addressParts[0];\r\n        addressLocality = addressParts[1];\r\n        const regionPostal = addressParts[2].split(\" \");\r\n        addressRegion = regionPostal[0];\r\n        postalCode = regionPostal.slice(1).join(\" \");\r\n      }\r\n      return {\r\n        \"@type\": \"MedicalClinic\",\r\n        \"name\": loc.name,\r\n        \"address\": {\r\n          \"@type\": \"PostalAddress\",\r\n          \"streetAddress\": streetAddress,\r\n          \"addressLocality\": addressLocality,\r\n          \"addressRegion\": addressRegion,\r\n          \"postalCode\": postalCode,\r\n          \"addressCountry\": \"US\"\r\n        },\r\n        \"telephone\": loc.phone,\r\n        \"url\": `https://californiapremierpainclinics.com/locations/${key}`,\r\n        \"image\": loc.desktopImage || loc.heroImage,\r\n        \"description\": loc.description\r\n      };\r\n    });\r\n    locationsRichSnippet = {\r\n      \"@context\": \"https://schema.org\",\r\n      \"@graph\": locationsArray\r\n    };\r\n  }\r\n\r\n  // Determine content: single location detail or list.\r\n  let officeContent = null;\r\n  if (locationId) {\r\n    const office = locationsData[locationId];\r\n    if (office) {\r\n      officeContent = <SingleLocation office={office} />;\r\n    } else {\r\n      officeContent = (\r\n        <div className=\"office-detail not-found\">\r\n          <h2>Office Not Found</h2>\r\n          <p>Please select a valid location.</p>\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    officeContent = <LocationsSection showButton={false} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Inject rich snippet if on the list page */}\r\n      {!isSingleLocation && locationsRichSnippet && (\r\n        <Helmet>\r\n          <script type=\"application/ld+json\">\r\n            {JSON.stringify(locationsRichSnippet)}\r\n          </script>\r\n        </Helmet>\r\n      )}\r\n      <div className=\"locations-page-container\">\r\n        <div className=\"contact-header\">\r\n          <p className=\"small-heading\">CALIFORNIA PREMIER PAIN CLINICS</p>\r\n          <h2 className=\"main-heading\">Finding Paths to Relief</h2>\r\n          <p className=\"sub-text\">\r\n            Our mission is to reduce your pain and suffering, restore your independence, and improve your quality of life.\r\n          </p>\r\n          <p className=\"sub-text\">\r\n            If your lawyer recommends CPPC for an assessment or continuous care, know that we offer personalized treatments tailored to your needs.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Contact Form with auto-scroll anchor */}\r\n        <div id=\"contactForm\">\r\n          {!submitted ? (\r\n            <form className=\"contact-container\" onSubmit={handleSubmit}>\r\n              <div className=\"contact-left\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstName\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={formData.firstName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                  {errors.firstName && <span className=\"error-message\">{errors.firstName}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastName\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={formData.lastName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                  {errors.lastName && <span className=\"error-message\">{errors.lastName}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email Address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                  {errors.email && <span className=\"error-message\">{errors.email}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phone\">Phone Number</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    value={formData.phone}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                  {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"message\">Message</label>\r\n                  <textarea\r\n                    name=\"message\"\r\n                    value={formData.message}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                  {errors.message && <span className=\"error-message\">{errors.message}</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    id=\"checkbox-agree\"\r\n                    type=\"checkbox\"\r\n                    name=\"agreement\"\r\n                    checked={formData.agreement}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                  <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }}>\r\n                    <label htmlFor=\"agreement\">\r\n                      By checking this box, I acknowledge that any information submitted will be forwarded to the CPPC office via email and is not a secure messaging system.\r\n                    </label>\r\n                  </div>\r\n                  {errors.agreement && <span className=\"error-message\">{errors.agreement}</span>}\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"submit-button\">SEND</button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"contact-submitted-message\">\r\n              <h3>Thank You!</h3>\r\n              <p>Your message has been sent successfully. We will get back to you shortly.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Render office details or full locations list */}\r\n        {officeContent}\r\n      </div>\r\n\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationsPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { \r\n  faFacebook, \r\n  faSnapchat, \r\n  faTiktok, \r\n  faYoutube, \r\n  faPinterest, \r\n  faThreads, \r\n  faInstagram \r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./FooterComponent.css\";\r\n\r\nfunction FooterComponent() {\r\n  return (\r\n    <footer className=\"footer-container\">\r\n      {/* Top area with 4 columns on desktop/tablet */}\r\n      <Link to=\"/\">\r\n        <img\r\n          src=\"https://i.postimg.cc/FsjJMwWQ/footer-logo.webp\"\r\n          alt=\"Pure Health & Wellness\"\r\n          className=\"footer-logo\"\r\n        />\r\n      </Link>\r\n\r\n\r\n      <p className=\"footer-tagline\">\r\n        Helping you get rid of excess weight, erectile dysfunction, and low energy levels.\r\n      </p>\r\n\r\n      <div className=\"footer-socials\">\r\n\r\n\r\n\r\n        {/* 2) NAVIGATION COLUMN */}\r\n        <div className=\"footer-col footer-section nav-col\">\r\n          <h3>Navigation</h3>\r\n          <ul>\r\n            <li><a href=\"/\">Home</a></li>\r\n            <li><a href=\"/about-us\">About Us</a></li>\r\n            <li><a href=\"/book-appointment\">Book Appointment</a></li>\r\n            <li><a href=\"/contact\">Contact Us</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n        {/* 3) SERVICES COLUMN */}\r\n        <div className=\"footer-col footer-section services-col\">\r\n          <h3>Our Services</h3>\r\n          <ul>\r\n            <li><a href=\"/services/testosterone-replacement-therapy\">Testosterone Replacement Therapy</a></li>\r\n            <li><a href=\"/services/erectile-dysfunction-treatment\">Erectile Dysfunction Treatment</a></li>\r\n            <li><a href=\"/services/hormone-therapy-for-women\">HRT Treatment for Women</a></li>\r\n            <li><a href=\"/services/benefits-of-peptide-therapy\">Peptide Therapy</a></li>\r\n            <li><a href=\"/services/platelet-rich-plasma-treatment\">Platelet Rich Plasma Therapy</a></li>\r\n            <li><a href=\"/services/pain-management\">Pain Management</a></li>\r\n\r\n          </ul>\r\n        </div>\r\n\r\n        {/* 4) GET IN TOUCH COLUMN */}\r\n        <div className=\"footer-col footer-section contact-col\">\r\n          <h3>Get In Touch</h3>\r\n          <ul>\r\n            <li>\r\n              <strong>Email: </strong>\r\n              <a href=\"mailto:info@purehealthdx.com\">\r\n                &nbsp;info@purehealthdx.com\r\n              </a>\r\n            </li>\r\n\r\n          </ul>\r\n          <p className=\"book-appointment-p\">\r\n            <a href=\"/contact\" className=\"book-appointment-link\">\r\n              Contact Us\r\n            </a>\r\n          </p>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bottom Bar */}\r\n      <div className=\"footer-bottom\">\r\n        <p>© 2025 Pure Health & Wellness. All Rights Reserved.</p>\r\n        <ul className=\"footer-bottom-links\">\r\n          <li><a href=\"/privacy-policy\">Privacy Policy</a></li>\r\n          <li><a href=\"/terms-and-conditions\">Terms &amp; Conditions</a></li>\r\n        </ul>\r\n        <p className=\"footer-credit\">Website by James Lagattuta</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default FooterComponent;\r\n","// src/sections/LocationsSection.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { locationsData } from \"../data\";\r\nimport \"./LocationsSection.css\";\r\n\r\nfunction LocationsSection({ showButton = true }) {\r\n  // Convert locationsData (an object) to an array of locations with keys.\r\n  const locations = Object.entries(locationsData).map(([key, location]) => ({\r\n    ...location,\r\n    id: key,\r\n  }));\r\n\r\n  // Determine if the screen width is 769 or greater.\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth >= 769);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsDesktop(window.innerWidth >= 769);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Handler to open the address in Google Maps\r\n  const openMap = (address, e) => {\r\n    e.stopPropagation();\r\n    window.open(\r\n      `https://www.google.com/maps/search/?api=1&query=${address.replace(/ /g, \"+\")}`,\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  // Handler for calling the phone number\r\n  const callPhone = (phone, e) => {\r\n    e.stopPropagation();\r\n    window.location.href = `tel:${phone.replace(/[^0-9]/g, \"\")}`;\r\n  };\r\n\r\n  // Helper to determine the background image based on screen width and available data.\r\n  const getBackgroundImage = (location) => {\r\n    // Use desktopImage if available and on desktop; otherwise, fall back to heroImage (or image)\r\n    return isDesktop && location.desktopImage\r\n      ? location.desktopImage\r\n      : location.image || location.heroImage;\r\n  };\r\n\r\n  return (\r\n    <section className=\"locations-section\">\r\n      <div className=\"hero-content-title-locations\">\r\n        <div className=\"line-locations\"></div>\r\n        <h1 className=\"company-name-locations\">OUR LOCATIONS</h1>\r\n        <div className=\"line-locations\"></div>\r\n      </div>\r\n      <div className=\"locations-grid\">\r\n        {locations.map((location, index) => (\r\n          <Link\r\n            key={location.id}\r\n            to={`/locations/${location.id}`}\r\n            className=\"location-card-link\"\r\n          >\r\n            <div className={`location-card ${index % 2 !== 0 ? \"reverse\" : \"\"}`}>\r\n              <div\r\n                className=\"location-image\"\r\n                style={{ backgroundImage: `url(${getBackgroundImage(location)})` }}\r\n              ></div>\r\n              <div className=\"location-info\">\r\n                <h2 className=\"location-city\">{location.name}</h2>\r\n                <p className=\"location-address\">\r\n                  {location.address ? (\r\n                    <span\r\n                      onClick={(e) => openMap(location.address, e)}\r\n                      className=\"map-link\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <img\r\n                        src=\"https://i.postimg.cc/HLxtkzZm/map-pin-1-1.webp\"\r\n                        alt=\"Map icon\"\r\n                        className=\"map-icon\"\r\n                        height=\"16\"\r\n                        width=\"16\"\r\n                      />\r\n                      {location.address}\r\n                    </span>\r\n                  ) : (\r\n                    \"Address coming soon\"\r\n                  )}\r\n                </p>\r\n                {location.phone && (\r\n                  <p className=\"location-address\">\r\n                    <strong>Phone:</strong>\r\n                    <span\r\n                      onClick={(e) => callPhone(location.phone, e)}\r\n                      className=\"phone-link\"\r\n                      style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\r\n                    >\r\n                      {location.phone}\r\n                    </span>\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      {showButton && (\r\n        <div\r\n          className=\"button-container\"\r\n          style={{ textAlign: \"center\", marginTop: \"20px\" }}\r\n        >\r\n          <Link to=\"/locations\" className=\"location-section-button\">\r\n            View All Locations\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default LocationsSection;\r\n"],"names":["_ref","office","isDesktop","setIsDesktop","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","servicesArray","Object","entries","servicesData","map","_ref2","key","service","id","locationImage","desktopImage","heroImage","richSnippet","name","description","phone","location","href","email","serviceImage","images","desktopHero","hero","title","shortDescription","_jsxs","_Fragment","children","_jsx","Helmet","type","JSON","stringify","className","style","backgroundImage","replace","fax","backgroundSize","backgroundPosition","sort","a","b","localeCompare","Link","to","locationId","useParams","formData","setFormData","firstName","lastName","message","agreement","errors","setErrors","submitted","setSubmitted","hash","element","document","getElementById","scrollIntoView","behavior","handleInputChange","e","value","checked","target","prev","isSingleLocation","Boolean","locationsRichSnippet","locationsData","loc","addressParts","address","split","s","trim","streetAddress","addressLocality","addressRegion","postalCode","length","regionPostal","slice","join","officeContent","SingleLocation","LocationsSection","showButton","onSubmit","async","preventDefault","formErrors","validateForm","newErrors","test","keys","_document$querySelect","csrfToken","querySelector","getAttribute","response","fetch","method","headers","body","contact","ok","console","log","error","json","form","htmlFor","onChange","required","display","flexDirection","alignItems","FooterComponent","src","alt","locations","getBackgroundImage","image","index","onClick","openMap","stopPropagation","open","cursor","height","width","callPhone","marginLeft","textAlign","marginTop"],"sourceRoot":""}