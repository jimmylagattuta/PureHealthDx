{"version":3,"file":"static/js/47.e8b0e527.chunk.js","mappings":"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","sources":["pages/AminoAsylumPage6.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport \"./AminoAsylumLandingPage.css\";\r\n\r\nexport default function AminoAsylumPage6() {\r\n  const navigate = useNavigate();\r\n  const stored = localStorage.getItem(\"appointmentFormData\");\r\n  const saved = stored ? JSON.parse(stored) : {};\r\n\r\n  const sigPadPatient = useRef(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    trigger,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onChange\", defaultValues: saved });\r\n\r\n  useEffect(() => {\r\n    trigger();\r\n  }, [trigger]);\r\n\r\n  const vals = watch();\r\n  const reqClass = (e) => (e ? \"aa-required error\" : \"aa-required valid\");\r\n\r\n  const clearSignature = () => {\r\n    sigPadPatient.current.clear();\r\n    setValue(\"patientSignature6\", \"\");\r\n  };\r\n\r\n  const saveSignature = () => {\r\n    const dataUrl = sigPadPatient.current.getTrimmedCanvas().toDataURL(\"image/png\");\r\n    setValue(\"patientSignature6\", dataUrl, { shouldValidate: true });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    localStorage.setItem(\r\n      \"appointmentFormData\",\r\n      JSON.stringify({ ...saved, ...data })\r\n    );\r\n    // final submit action, e.g. API call\r\n    console.log(\"Final data:\", { ...saved, ...data });\r\n    navigate(\"/confirmation\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"aa-container\">\r\n      <div className=\"aa-content\">\r\n        <h1 className=\"aa-page-title\">\r\n          Book TeleMedicine Consultation – AminoAsylum\r\n        </h1>\r\n        <div className=\"aa-paper\">\r\n          <div className=\"aa-progress\">\r\n            <div className=\"aa-progress-info\">\r\n              <p>Step 6 of 6</p>\r\n            </div>\r\n            <div className=\"aa-progress-bg\">\r\n              <div className=\"aa-progress-fill\" style={{ width: \"100%\" }} />\r\n            </div>\r\n          </div>\r\n\r\n          <h2>Control Substance Auto-refill Consent</h2>\r\n          <p>\r\n            I understand that Pure Health &amp; Wellness has enrolled my controlled substance medication in Tailor Made Compounding’s auto-refill program.\r\n          </p>\r\n          <p><strong>Liability and Responsibility:</strong></p>\r\n          <ol>\r\n            <li>I understand that TMC will not call and/or email to notify me or Pure Health &amp; Wellness that my medication is being refilled.</li>\r\n            <li>I understand that this form is a legal replacement in regards to receiving a call to notify me that my prescription is due to be filled and will be shipped to me without confirmation.</li>\r\n            <li>I understand that it is my responsibility to immediately report any change in regards to my shipping address.</li>\r\n            <li>I understand that myself will be held responsible for notifying Tailor Made Compounding in the event my controlled substance package(s) are lost/stolen. I will inquire about the next steps for contacting UPS and filing a police report, and I fully understand if I do not take these next steps that I may not be eligible for any medication replacements.</li>\r\n            <li>I understand that myself will be held responsible for any added expenses of lost or stolen packages.</li>\r\n            <li>I understand that I will be responsible for notifying TMC if I have a pause and/or discontinuation of medication.</li>\r\n            <li>I understand that it is myself or Pure Health &amp; Wellness responsibility for notifying TMC if my dosing or quantity prescribed has changed and any previous prescription’s refills will need to be canceled.</li>\r\n            <li>I understand that if I do not notify TMC before a prescription has left their facility, I will still be held responsible for the payment of this prescription.</li>\r\n          </ol>\r\n          <p>\r\n            In accordance with state law KRS 218A.180 a controlled substance included in Schedules III, IV, and V \"shall not be filled or refilled more than six (6) months after the date issued or be refilled more than five (5) times, unless renewed by the practitioner and a new prescription, written, electronic, or oral shall be required\". Therefore, any prescriptions exceeding 6 months from date written, will require a new order to be sent in or verbal renewal by prescriber regardless of refills remaining.\r\n          </p>\r\n\r\n          <form className=\"aa-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Patient Name Display */}\r\n            <div className=\"aa-form-group aa-form-group--two\">\r\n              <div>\r\n                <label>Patient Name</label>\r\n                <p>{saved.firstName} {saved.lastName}</p>\r\n              </div>\r\n              <div>\r\n                <label>Date of Birth</label>\r\n                <span className={reqClass(errors.dobMonth || errors.dobDay || errors.dobYear)}>\r\n                  (Required)\r\n                </span>\r\n                <div style={{ display: \"flex\", gap: \"0.5rem\", marginTop: '0.25rem' }}>\r\n                  <select\r\n                    className=\"aa-select\"\r\n                    {...register(\"dobMonth\", { required: true })}\r\n                  >\r\n                    <option value=\"\">MM</option>\r\n                    {[...Array(12)].map((_, i) => (\r\n                      <option key={i} value={String(i+1).padStart(2,'0')}>\r\n                        {String(i+1).padStart(2,'0')}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <select\r\n                    className=\"aa-select\"\r\n                    {...register(\"dobDay\", { required: true })}\r\n                  >\r\n                    <option value=\"\">DD</option>\r\n                    {[...Array(31)].map((_, i) => (\r\n                      <option key={i} value={String(i+1).padStart(2,'0')}>\r\n                        {String(i+1).padStart(2,'0')}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <select\r\n                    className=\"aa-select\"\r\n                    {...register(\"dobYear\", { required: true })}\r\n                  >\r\n                    <option value=\"\">YYYY</option>\r\n                    {Array.from({ length: 100 }, (_, k) => new Date().getFullYear() - k).map((yr) => (\r\n                      <option key={yr} value={yr}>{yr}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {(errors.dobMonth || errors.dobDay || errors.dobYear) && (\r\n                  <p className=\"aa-error-message\">Month, Day, and Year are required.</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Patient Signature */}\r\n            <div className=\"aa-form-group\">\r\n              <label>\r\n                Patient Signature\r\n                <span className={reqClass(errors.patientSignature6)}>\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <SignatureCanvas\r\n                penColor=\"black\"\r\n                canvasProps={{ className: \"aa-signature-canvas\" }}\r\n                ref={sigPadPatient}\r\n                onEnd={saveSignature}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"aa-clear-btn\"\r\n                onClick={clearSignature}\r\n              >\r\n                Clear\r\n              </button>\r\n              {errors.patientSignature6 && (\r\n                <p className=\"aa-error-message\">Signature is required.</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Navigation Buttons */}\r\n            <div className=\"aa-form-group aa-form-group--two\" style={{ justifyContent: 'space-between' }}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => navigate(-1)}\r\n                className=\"aa-submit-btn\"\r\n                style={{ background: 'transparent', border: '1px solid #111827', color: '#111827' }}\r\n              >\r\n                Previous\r\n              </button>\r\n              <button type=\"submit\" className=\"aa-submit-btn\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AminoAsylumPage6","navigate","useNavigate","stored","localStorage","getItem","saved","JSON","parse","sigPadPatient","useRef","register","handleSubmit","trigger","setValue","watch","formState","errors","useForm","mode","defaultValues","useEffect","reqClass","e","_jsx","className","children","_jsxs","style","width","onSubmit","data","setItem","stringify","_objectSpread","console","log","firstName","lastName","dobMonth","dobDay","dobYear","display","gap","marginTop","required","value","Array","map","_","i","String","padStart","from","length","k","Date","getFullYear","yr","patientSignature6","SignatureCanvas","penColor","canvasProps","ref","onEnd","saveSignature","dataUrl","current","getTrimmedCanvas","toDataURL","shouldValidate","type","onClick","clearSignature","clear","justifyContent","background","border","color"],"sourceRoot":""}