{"version":3,"file":"static/js/709.4ac42c4f.chunk.js","mappings":"wKAGA,MAkEA,EAlE2BA,KACzB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,IAC3CG,GAAYC,EAAAA,EAAAA,QAAO,MAkBzB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJF,EAAAA,EAAAA,MAAA,QAAMI,SAnBYC,IACpBA,EAAEC,iBACF,MAAMC,EAAYT,EAAUU,QACxBV,EAAUU,QAAQC,mBAAmBC,UAAU,aAC/C,GAEJC,QAAQC,IAAI,iBAAkBnB,GAC9BkB,QAAQC,IAAI,iBAAkBhB,GAC9Be,QAAQC,IAAI,kBAAmBL,GAC/BM,MAAM,iCAAiC,EAURX,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,YAAWZ,SAAC,wCAG3BC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLC,GAAG,YACHC,MAAOxB,EACPyB,SAAWb,GAAMX,EAAgBW,EAAEc,OAAOF,OAC1CG,UAAQ,QAGZpB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,eAAcZ,SAAC,6CAG9BC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLC,GAAG,eACHC,MAAOrB,EACPsB,SAAWb,GAAMR,EAAgBQ,EAAEc,OAAOF,OAC1CG,UAAQ,QAGZpB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBACPC,EAAAA,EAAAA,KAACkB,IAAe,CACdC,SAAS,QACTC,YAAa,CAAEC,MAAO,IAAKC,OAAQ,IAAKxB,UAAW,aACnDyB,IAAK5B,KAEPK,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAASY,QAvCPC,KACjB9B,EAAUU,SAASV,EAAUU,QAAQqB,OAAO,EAsCI3B,SAAC,wBAIjDC,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAAQb,SAAC,oCAEpB,C","sources":["pages/BecomeAPatientPage.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\n\r\nconst BecomeAPatientPage = () => {\r\n  const [textResponse, setTextResponse] = useState(\"\");\r\n  const [dateResponse, setDateResponse] = useState(\"\");\r\n  const sigCanvas = useRef(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const signature = sigCanvas.current\r\n      ? sigCanvas.current.getTrimmedCanvas().toDataURL(\"image/png\")\r\n      : \"\";\r\n    // Replace this with your submission logic (e.g., POST to your backend)\r\n    console.log(\"Text Response:\", textResponse);\r\n    console.log(\"Date Response:\", dateResponse);\r\n    console.log(\"Signature Data:\", signature);\r\n    alert(\"Appointment request submitted!\");\r\n  };\r\n\r\n  const clearSignature = () => {\r\n    if (sigCanvas.current) sigCanvas.current.clear();\r\n  };\r\n\r\n  return (\r\n    <div className=\"become-a-patient-page\">\r\n      <h1>Become a Patient</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"question1\">\r\n            Please describe your main concern:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"question1\"\r\n            value={textResponse}\r\n            onChange={(e) => setTextResponse(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateQuestion\">\r\n            Select your preferred appointment date:\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"dateQuestion\"\r\n            value={dateResponse}\r\n            onChange={(e) => setDateResponse(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Signature:</label>\r\n          <SignatureCanvas\r\n            penColor=\"black\"\r\n            canvasProps={{ width: 500, height: 200, className: \"sigCanvas\" }}\r\n            ref={sigCanvas}\r\n          />\r\n          <button type=\"button\" onClick={clearSignature}>\r\n            Clear Signature\r\n          </button>\r\n        </div>\r\n        <button type=\"submit\">Submit Appointment Request</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BecomeAPatientPage;\r\n"],"names":["BecomeAPatientPage","textResponse","setTextResponse","useState","dateResponse","setDateResponse","sigCanvas","useRef","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","signature","current","getTrimmedCanvas","toDataURL","console","log","alert","htmlFor","type","id","value","onChange","target","required","SignatureCanvas","penColor","canvasProps","width","height","ref","onClick","clearSignature","clear"],"sourceRoot":""}