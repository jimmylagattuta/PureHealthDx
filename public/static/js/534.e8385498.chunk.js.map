{"version":3,"file":"static/js/534.e8385498.chunk.js","mappings":"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","sources":["pages/BookAppointmentPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./BookAppointmentPage.css\";\r\n\r\nconst BookAppointmentPage = () => {\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n  }, []);\r\n\r\n  const demoMode = false;\r\n  const navigate = useNavigate();\r\n\r\n  // Retrieve any stored data from previous sessions\r\n  const storedData = localStorage.getItem(\"appointmentFormData\");\r\n\r\n  // Set default values: either use stored data or demo defaults (if in demoMode)\r\n  const defaultValues =\r\n    storedData !== null\r\n      ? JSON.parse(storedData)\r\n      : demoMode\r\n      ? {\r\n          firstName: \"John\",\r\n          lastName: \"Doe\",\r\n          email: \"john.doe@example.com\",\r\n          phone: \"(555) 555-5555\",\r\n          gender: \"male\",\r\n          dobMonth: \"1\",\r\n          dobDay: \"1\",\r\n          dobYear: \"1980\",\r\n          driversLicense: \"D1234567\",\r\n          streetAddress: \"1234 Elm Street\",\r\n          city: \"Springfield\",\r\n          zipCode: \"12345\",\r\n          state: \"CA\",\r\n          occupation: \"Software Engineer\",\r\n          hoursOfSleep: \"6-7\",\r\n          healthGoals: \"Maintain healthy weight and improve energy\",\r\n          currentMedications: \"None\",\r\n          maritalStatus: \"single\",       // NEW\r\n          hasChildren: \"no\",             // NEW\r\n          childrenCount: \"\"              // NEW\r\n        }\r\n      : {};\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    trigger,\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues,\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    trigger(); // validate on mount to activate grey labels in demoMode\r\n  }, [trigger]);\r\n\r\n  const values = watch();\r\n\r\n  function getRequiredClass(fieldValue, fieldError) {\r\n    if (!fieldValue || fieldError) return \"required error\";\r\n    return \"required valid\";\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    // Save the data to localStorage so it persists for later steps\r\n    console.log(\"📋 Form submission (questions + answers):\", data);\r\n    localStorage.setItem(\"appointmentFormData\", JSON.stringify(data));\r\n\r\n    // Proceed to next step\r\n\r\n    navigate(\"/book-appointment-step2\");\r\n\r\n  };\r\n\r\n  const formatPhoneNumber = (value) => {\r\n    if (!value) return value;\r\n    const phone = value.replace(/[^\\d]/g, \"\").slice(0, 10);\r\n    const phoneLength = phone.length;\r\n\r\n    if (phoneLength < 4) return phone;\r\n    if (phoneLength < 7) return `(${phone.slice(0, 3)}) ${phone.slice(3)}`;\r\n    return `(${phone.slice(0, 3)}) ${phone.slice(3, 6)}-${phone.slice(6, 10)}`;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"book-appointment-container\">\r\n      {/* Banner */}\r\n      <div className=\"banner\">\r\n        <div className=\"banner-overlay\"></div>\r\n        <div className=\"banner-text\">\r\n          <h1>Book Telemedicine Consultation</h1>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"content-section\">\r\n        <h2>Start Your Wellness Journey Today</h2>\r\n        <div className=\"paper-container\">\r\n          {/* Progress */}\r\n          <div className=\"progress\">\r\n            <div className=\"progress-info\">\r\n              <p>Step 1 of 6</p>\r\n            </div>\r\n            <div className=\"progress-bar-background\">\r\n              <div className=\"progress-bar-fill\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Form */}\r\n          <form className=\"intake-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Name */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Name{\" \"}\r\n                <span className={getRequiredClass(values.firstName, errors.firstName)}>\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"First\"\r\n                {...register(\"firstName\", { required: \"Please complete the following field: First.\" })}\r\n              />\r\n              {errors.firstName && <p className=\"error-message\">{errors.firstName.message}</p>}\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Last\"\r\n                {...register(\"lastName\", { required: \"Please complete the following field: Last.\" })}\r\n              />\r\n              {errors.lastName && <p className=\"error-message\">{errors.lastName.message}</p>}\r\n            </div>\r\n\r\n            {/* Email */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Email{\" \"}\r\n                <span className={getRequiredClass(values.email, errors.email)}>(Required)</span>\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"email@example.com\"\r\n                {...register(\"email\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\r\n            </div>\r\n\r\n            {/* Phone */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Phone{\" \"}\r\n                <span className={getRequiredClass(values.phone, errors.phone)}>(Required)</span>\r\n              </label>\r\n             <input\r\n              type=\"tel\"\r\n              placeholder=\"(555) 555-5555\"\r\n              {...register(\"phone\", {\r\n                required: \"This field is required.\",\r\n                pattern: {\r\n                  value: /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/,\r\n                  message: \"Phone format: (###) ###-####\",\r\n                },\r\n              })}\r\n              onChange={(e) => {\r\n                const formatted = formatPhoneNumber(e.target.value);\r\n                setValue(\"phone\", formatted, { shouldValidate: true });\r\n              }}\r\n              value={values.phone}\r\n            />\r\n\r\n\r\n              {errors.phone && <p className=\"error-message\">{errors.phone.message}</p>}\r\n            </div>\r\n\r\n            {/* Gender */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Gender{\" \"}\r\n                <span className={getRequiredClass(values.gender, errors.gender)}>(Required)</span>\r\n              </label>\r\n              <select {...register(\"gender\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n                <option value=\"other\">Other</option>\r\n                <option value=\"prefer-not-to-say\">Prefer not to say</option>\r\n              </select>\r\n              {errors.gender && <p className=\"error-message\">{errors.gender.message}</p>}\r\n            </div>\r\n\r\n            {/* DOB */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Date of Birth{\" \"}\r\n                <span\r\n                  className={getRequiredClass(\r\n                    values.dobMonth && values.dobDay && values.dobYear,\r\n                    errors.dobMonth || errors.dobDay || errors.dobYear\r\n                  )}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\r\n                <select {...register(\"dobMonth\", { required: \"Month is required.\" })}>\r\n                  <option value=\"\">MM</option>\r\n                  {[...Array(12)].map((_, i) => (\r\n                    <option key={i + 1} value={i + 1}>\r\n                      {String(i + 1).padStart(2, \"0\")}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select {...register(\"dobDay\", { required: \"Day is required.\" })}>\r\n                  <option value=\"\">DD</option>\r\n                  {[...Array(31)].map((_, i) => (\r\n                    <option key={i + 1} value={i + 1}>\r\n                      {String(i + 1).padStart(2, \"0\")}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n<select {...register(\"dobYear\", { required: \"Year is required.\" })}>\r\n  <option value=\"\">YYYY</option>\r\n  {Array.from({ length: 100 }, (_, i) => {\r\n    const currentYear = new Date().getFullYear();\r\n    const year = currentYear - 18 - i;\r\n    return (\r\n      <option key={year} value={year}>\r\n        {year}\r\n      </option>\r\n    );\r\n  })}\r\n</select>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            {/* Driver’s License */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Driver’s License #{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.driversLicense, errors.driversLicense)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"E.g. A1234567\"\r\n                {...register(\"driversLicense\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.driversLicense && (\r\n                <p className=\"error-message\">{errors.driversLicense.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Address */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Street Address{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.streetAddress, errors.streetAddress)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"1234 Elm Street\"\r\n                {...register(\"streetAddress\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.streetAddress && (\r\n                <p className=\"error-message\">{errors.streetAddress.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* City */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                City{\" \"}\r\n                <span className={getRequiredClass(values.city, errors.city)}>(Required)</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                {...register(\"city\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.city && <p className=\"error-message\">{errors.city.message}</p>}\r\n            </div>\r\n\r\n            {/* Zip */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Zip Code{\" \"}\r\n                <span className={getRequiredClass(values.zipCode, errors.zipCode)}>(Required)</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"12345\"\r\n                {...register(\"zipCode\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.zipCode && <p className=\"error-message\">{errors.zipCode.message}</p>}\r\n            </div>\r\n\r\n            {/* State */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                State{\" \"}\r\n                <span className={getRequiredClass(values.state, errors.state)}>(Required)</span>\r\n              </label>\r\n              <select {...register(\"state\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select a state</option>\r\n                <option value=\"CA\">California</option>\r\n                <option value=\"NY\">New York</option>\r\n              </select>\r\n              {errors.state && <p className=\"error-message\">{errors.state.message}</p>}\r\n            </div>\r\n\r\n            {/* Occupation */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                What is your occupation?{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.occupation, errors.occupation)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Occupation\"\r\n                {...register(\"occupation\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.occupation && (\r\n                <p className=\"error-message\">{errors.occupation.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Hours of Sleep */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                How many hours a night do you sleep?{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.hoursOfSleep, errors.hoursOfSleep)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <select {...register(\"hoursOfSleep\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">1 or less</option>\r\n                <option value=\"2-3\">2-3</option>\r\n                <option value=\"4-5\">4-5</option>\r\n                <option value=\"6-7\">6-7</option>\r\n                <option value=\"8+\">8+</option>\r\n              </select>\r\n              {errors.hoursOfSleep && (\r\n                <p className=\"error-message\">{errors.hoursOfSleep.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Health Goals */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Please write a quick summary of your overall health goals:{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.healthGoals, errors.healthGoals)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <textarea\r\n                placeholder=\"0 of 500 max characters\"\r\n                maxLength={500}\r\n                {...register(\"healthGoals\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.healthGoals && (\r\n                <p className=\"error-message\">{errors.healthGoals.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Current Medications */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Please list any current medications you are taking:{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.currentMedications, errors.currentMedications)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <textarea\r\n                placeholder=\"0 of 500 max characters\"\r\n                maxLength={500}\r\n                {...register(\"currentMedications\", {\r\n                  required: \"This field is required.\",\r\n                })}\r\n              />\r\n              {errors.currentMedications && (\r\n                <p className=\"error-message\">{errors.currentMedications.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Marital Status */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Marital Status{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.maritalStatus, errors.maritalStatus)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <select {...register(\"maritalStatus\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"single\">Single</option>\r\n                <option value=\"married\">Married</option>\r\n                <option value=\"divorced\">Divorced</option>\r\n                <option value=\"widowed\">Widowed</option>\r\n              </select>\r\n              {errors.maritalStatus && (\r\n                <p className=\"error-message\">{errors.maritalStatus.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Children Yes/No */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Do you have children?{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.hasChildren, errors.hasChildren)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <div style={{ display: \"flex\", gap: \"1rem\", marginTop: \"0.5rem\" }}>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"yes\"\r\n                    {...register(\"hasChildren\", { required: \"This field is required.\" })}\r\n                  />{\" \"}\r\n                  Yes\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"no\"\r\n                    {...register(\"hasChildren\", { required: \"This field is required.\" })}\r\n                  />{\" \"}\r\n                  No\r\n                </label>\r\n              </div>\r\n              {errors.hasChildren && (\r\n                <p className=\"error-message\">{errors.hasChildren.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Number of Children - only if “Yes” */}\r\n            {values.hasChildren === \"yes\" && (\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Number of Children{\" \"}\r\n                  <span\r\n                    className={getRequiredClass(\r\n                      values.childrenCount,\r\n                      errors.childrenCount\r\n                    )}\r\n                  >\r\n                    (Required)\r\n                  </span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  placeholder=\"e.g. 2\"\r\n                  {...register(\"childrenCount\", {\r\n                    required: \"Please enter number of children.\",\r\n                    min: { value: 1, message: \"Must be at least 1.\" },\r\n                  })}\r\n                />\r\n                {errors.childrenCount && (\r\n                  <p className=\"error-message\">{errors.childrenCount.message}</p>\r\n                )}\r\n              </div>\r\n            )}\r\n            <div className=\"form-navigation button-row\">\r\n\r\n              <button type=\"submit\" className=\"submit-btn\">\r\n                Next Step\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookAppointmentPage;\r\n"],"names":["BookAppointmentPage","useEffect","window","scrollTo","top","behavior","navigate","useNavigate","storedData","localStorage","getItem","defaultValues","JSON","parse","register","handleSubmit","trigger","watch","setValue","formState","errors","useForm","mode","values","getRequiredClass","fieldValue","fieldError","_jsxs","className","children","_jsx","onSubmit","data","console","log","setItem","stringify","firstName","_objectSpread","type","placeholder","required","message","lastName","email","phone","pattern","value","onChange","e","formatted","replace","slice","phoneLength","length","concat","formatPhoneNumber","target","shouldValidate","gender","dobMonth","dobDay","dobYear","style","display","gap","Array","map","_","i","String","padStart","from","year","Date","getFullYear","driversLicense","streetAddress","city","zipCode","state","occupation","hoursOfSleep","healthGoals","maxLength","currentMedications","maritalStatus","hasChildren","marginTop","childrenCount","min"],"sourceRoot":""}