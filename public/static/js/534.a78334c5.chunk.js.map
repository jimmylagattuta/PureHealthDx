{"version":3,"file":"static/js/534.a78334c5.chunk.js","mappings":"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","sources":["pages/BookAppointmentPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./BookAppointmentPage.css\";\r\n\r\nconst BookAppointmentPage = () => {\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"auto\" });\r\n  }, []);\r\n\r\n  const demoMode = false;\r\n  const navigate = useNavigate();\r\n\r\n  // Retrieve any stored data from previous sessions\r\n  const storedData = localStorage.getItem(\"appointmentFormData\");\r\n\r\n  // Set default values: either use stored data or demo defaults (if in demoMode)\r\n  const defaultValues =\r\n    storedData !== null\r\n      ? JSON.parse(storedData)\r\n      : demoMode\r\n      ? {\r\n          firstName: \"John\",\r\n          lastName: \"Doe\",\r\n          email: \"john.doe@example.com\",\r\n          phone: \"(555) 555-5555\",\r\n          gender: \"male\",\r\n          dobMonth: \"1\",\r\n          dobDay: \"1\",\r\n          dobYear: \"1980\",\r\n          driversLicense: \"D1234567\",\r\n          streetAddress: \"1234 Elm Street\",\r\n          city: \"Springfield\",\r\n          zipCode: \"12345\",\r\n          state: \"CA\",\r\n          occupation: \"Software Engineer\",\r\n          hoursOfSleep: \"6-7\",\r\n          healthGoals: \"Maintain healthy weight and improve energy\",\r\n          currentMedications: \"None\",\r\n          maritalStatus: \"single\",       // NEW\r\n          hasChildren: \"no\",             // NEW\r\n          childrenCount: \"\"              // NEW\r\n        }\r\n      : {};\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    trigger,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues,\r\n  });\r\n\r\n  useEffect(() => {\r\n    trigger(); // validate on mount to activate grey labels in demoMode\r\n  }, [trigger]);\r\n\r\n  const values = watch();\r\n\r\n  function getRequiredClass(fieldValue, fieldError) {\r\n    if (!fieldValue || fieldError) return \"required error\";\r\n    return \"required valid\";\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    // Save the data to localStorage so it persists for later steps\r\n    console.log(\"📋 Form submission (questions + answers):\", data);\r\n    localStorage.setItem(\"appointmentFormData\", JSON.stringify(data));\r\n\r\n    // Proceed to next step\r\n\r\n    navigate(\"/book-appointment-step2\");\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-appointment-container\">\r\n      {/* Banner */}\r\n      <div className=\"banner\">\r\n        <div className=\"banner-overlay\"></div>\r\n        <div className=\"banner-text\">\r\n          <h1>Book Telemedicine Consultation</h1>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"content-section\">\r\n        <h2>Start Your Wellness Journey Today</h2>\r\n        <div className=\"paper-container\">\r\n          {/* Progress */}\r\n          <div className=\"progress\">\r\n            <div className=\"progress-info\">\r\n              <p>Step 1 of 6</p>\r\n            </div>\r\n            <div className=\"progress-bar-background\">\r\n              <div className=\"progress-bar-fill\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Form */}\r\n          <form className=\"intake-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Name */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Name{\" \"}\r\n                <span className={getRequiredClass(values.firstName, errors.firstName)}>\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"First\"\r\n                {...register(\"firstName\", { required: \"Please complete the following field: First.\" })}\r\n              />\r\n              {errors.firstName && <p className=\"error-message\">{errors.firstName.message}</p>}\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Last\"\r\n                {...register(\"lastName\", { required: \"Please complete the following field: Last.\" })}\r\n              />\r\n              {errors.lastName && <p className=\"error-message\">{errors.lastName.message}</p>}\r\n            </div>\r\n\r\n            {/* Email */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Email{\" \"}\r\n                <span className={getRequiredClass(values.email, errors.email)}>(Required)</span>\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"email@example.com\"\r\n                {...register(\"email\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\r\n            </div>\r\n\r\n            {/* Phone */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Phone{\" \"}\r\n                <span className={getRequiredClass(values.phone, errors.phone)}>(Required)</span>\r\n              </label>\r\n              <input\r\n                type=\"tel\"\r\n                placeholder=\"(555) 555-5555\"\r\n                {...register(\"phone\", {\r\n                  required: \"This field is required.\",\r\n                  pattern: {\r\n                    value: /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/,\r\n                    message: \"Phone format: (###) ###-####\",\r\n                  },\r\n                })}\r\n              />\r\n              {errors.phone && <p className=\"error-message\">{errors.phone.message}</p>}\r\n            </div>\r\n\r\n            {/* Gender */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Gender{\" \"}\r\n                <span className={getRequiredClass(values.gender, errors.gender)}>(Required)</span>\r\n              </label>\r\n              <select {...register(\"gender\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n                <option value=\"other\">Other</option>\r\n                <option value=\"prefer-not-to-say\">Prefer not to say</option>\r\n              </select>\r\n              {errors.gender && <p className=\"error-message\">{errors.gender.message}</p>}\r\n            </div>\r\n\r\n            {/* DOB */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Date of Birth{\" \"}\r\n                <span\r\n                  className={getRequiredClass(\r\n                    values.dobMonth && values.dobDay && values.dobYear,\r\n                    errors.dobMonth || errors.dobDay || errors.dobYear\r\n                  )}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\r\n                <select {...register(\"dobMonth\", { required: \"Month is required.\" })}>\r\n                  <option value=\"\">MM</option>\r\n                  {[...Array(12)].map((_, i) => (\r\n                    <option key={i + 1} value={i + 1}>\r\n                      {String(i + 1).padStart(2, \"0\")}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select {...register(\"dobDay\", { required: \"Day is required.\" })}>\r\n                  <option value=\"\">DD</option>\r\n                  {[...Array(31)].map((_, i) => (\r\n                    <option key={i + 1} value={i + 1}>\r\n                      {String(i + 1).padStart(2, \"0\")}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <select {...register(\"dobYear\", { required: \"Year is required.\" })}>\r\n                  <option value=\"\">YYYY</option>\r\n                  <option value=\"1980\">1980</option>\r\n                  <option value=\"2023\">2023</option>\r\n                  <option value=\"2022\">2022</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Driver’s License */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Driver’s License #{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.driversLicense, errors.driversLicense)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"E.g. A1234567\"\r\n                {...register(\"driversLicense\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.driversLicense && (\r\n                <p className=\"error-message\">{errors.driversLicense.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Address */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Street Address{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.streetAddress, errors.streetAddress)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"1234 Elm Street\"\r\n                {...register(\"streetAddress\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.streetAddress && (\r\n                <p className=\"error-message\">{errors.streetAddress.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* City */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                City{\" \"}\r\n                <span className={getRequiredClass(values.city, errors.city)}>(Required)</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                {...register(\"city\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.city && <p className=\"error-message\">{errors.city.message}</p>}\r\n            </div>\r\n\r\n            {/* Zip */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Zip Code{\" \"}\r\n                <span className={getRequiredClass(values.zipCode, errors.zipCode)}>(Required)</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"12345\"\r\n                {...register(\"zipCode\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.zipCode && <p className=\"error-message\">{errors.zipCode.message}</p>}\r\n            </div>\r\n\r\n            {/* State */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                State{\" \"}\r\n                <span className={getRequiredClass(values.state, errors.state)}>(Required)</span>\r\n              </label>\r\n              <select {...register(\"state\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select a state</option>\r\n                <option value=\"CA\">California</option>\r\n                <option value=\"NY\">New York</option>\r\n              </select>\r\n              {errors.state && <p className=\"error-message\">{errors.state.message}</p>}\r\n            </div>\r\n\r\n            {/* Occupation */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                What is your occupation?{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.occupation, errors.occupation)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Occupation\"\r\n                {...register(\"occupation\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.occupation && (\r\n                <p className=\"error-message\">{errors.occupation.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Hours of Sleep */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                How many hours a night do you sleep?{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.hoursOfSleep, errors.hoursOfSleep)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <select {...register(\"hoursOfSleep\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">1 or less</option>\r\n                <option value=\"2-3\">2-3</option>\r\n                <option value=\"4-5\">4-5</option>\r\n                <option value=\"6-7\">6-7</option>\r\n                <option value=\"8+\">8+</option>\r\n              </select>\r\n              {errors.hoursOfSleep && (\r\n                <p className=\"error-message\">{errors.hoursOfSleep.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Health Goals */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Please write a quick summary of your overall health goals:{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.healthGoals, errors.healthGoals)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <textarea\r\n                placeholder=\"0 of 500 max characters\"\r\n                maxLength={500}\r\n                {...register(\"healthGoals\", { required: \"This field is required.\" })}\r\n              />\r\n              {errors.healthGoals && (\r\n                <p className=\"error-message\">{errors.healthGoals.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Current Medications */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Please list any current medications you are taking:{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.currentMedications, errors.currentMedications)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <textarea\r\n                placeholder=\"0 of 500 max characters\"\r\n                maxLength={500}\r\n                {...register(\"currentMedications\", {\r\n                  required: \"This field is required.\",\r\n                })}\r\n              />\r\n              {errors.currentMedications && (\r\n                <p className=\"error-message\">{errors.currentMedications.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Marital Status */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Marital Status{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.maritalStatus, errors.maritalStatus)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <select {...register(\"maritalStatus\", { required: \"This field is required.\" })}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"single\">Single</option>\r\n                <option value=\"married\">Married</option>\r\n                <option value=\"divorced\">Divorced</option>\r\n                <option value=\"widowed\">Widowed</option>\r\n              </select>\r\n              {errors.maritalStatus && (\r\n                <p className=\"error-message\">{errors.maritalStatus.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Children Yes/No */}\r\n            <div className=\"form-group\">\r\n              <label>\r\n                Do you have children?{\" \"}\r\n                <span\r\n                  className={getRequiredClass(values.hasChildren, errors.hasChildren)}\r\n                >\r\n                  (Required)\r\n                </span>\r\n              </label>\r\n              <div style={{ display: \"flex\", gap: \"1rem\", marginTop: \"0.5rem\" }}>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"yes\"\r\n                    {...register(\"hasChildren\", { required: \"This field is required.\" })}\r\n                  />{\" \"}\r\n                  Yes\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"no\"\r\n                    {...register(\"hasChildren\", { required: \"This field is required.\" })}\r\n                  />{\" \"}\r\n                  No\r\n                </label>\r\n              </div>\r\n              {errors.hasChildren && (\r\n                <p className=\"error-message\">{errors.hasChildren.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Number of Children - only if “Yes” */}\r\n            {values.hasChildren === \"yes\" && (\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Number of Children{\" \"}\r\n                  <span\r\n                    className={getRequiredClass(\r\n                      values.childrenCount,\r\n                      errors.childrenCount\r\n                    )}\r\n                  >\r\n                    (Required)\r\n                  </span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  placeholder=\"e.g. 2\"\r\n                  {...register(\"childrenCount\", {\r\n                    required: \"Please enter number of children.\",\r\n                    min: { value: 1, message: \"Must be at least 1.\" },\r\n                  })}\r\n                />\r\n                {errors.childrenCount && (\r\n                  <p className=\"error-message\">{errors.childrenCount.message}</p>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Submit */}\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Next Step\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookAppointmentPage;\r\n"],"names":["BookAppointmentPage","useEffect","window","scrollTo","top","behavior","navigate","useNavigate","storedData","localStorage","getItem","defaultValues","JSON","parse","register","handleSubmit","trigger","watch","formState","errors","useForm","mode","values","getRequiredClass","fieldValue","fieldError","_jsxs","className","children","_jsx","onSubmit","data","console","log","setItem","stringify","firstName","type","placeholder","required","message","lastName","email","phone","pattern","value","gender","dobMonth","dobDay","dobYear","style","display","gap","Array","map","_","i","String","padStart","driversLicense","streetAddress","city","zipCode","state","occupation","hoursOfSleep","healthGoals","maxLength","currentMedications","maritalStatus","hasChildren","marginTop","childrenCount","min"],"sourceRoot":""}